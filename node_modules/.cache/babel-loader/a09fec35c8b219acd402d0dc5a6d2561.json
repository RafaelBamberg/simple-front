{"ast":null,"code":"import * as Yup from 'yup';\nimport valid from 'card-validator';\nexport default Yup.object().shape({\n  name: Yup.string().required('Campo obrigatório'),\n  cvv: Yup.string().max(3).required('Campo obrigatório'),\n  expiry: Yup.string().required('Campo obrigatório').test('Expiry date', value => {\n    if (!value) return false;\n    const match = /\\d{2}\\/\\d{4}/.test(value !== null && value !== void 0 ? value : '');\n    if (!match) return false;\n    const [month, year] = value.split('/');\n    if (month < '01' || month > '12') return false;\n    if (year < new Date().getFullYear().toString()) return false;\n    return true;\n  }),\n  number: Yup.string().test('test-number', 'Número do cartão invalido', value => valid.number(value).isValid)\n});","map":{"version":3,"sources":["/home/bamberg/test-front/src/services/schema.js"],"names":["Yup","valid","object","shape","name","string","required","cvv","max","expiry","test","value","match","month","year","split","Date","getFullYear","toString","number","isValid"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,KAArB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,eAAeD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,EAAAA,IAAI,EAAEJ,GAAG,CAACK,MAAJ,GAAaC,QAAb,CAAsB,mBAAtB,CAD0B;AAEhCC,EAAAA,GAAG,EAAEP,GAAG,CAACK,MAAJ,GAAaG,GAAb,CAAiB,CAAjB,EAAoBF,QAApB,CAA6B,mBAA7B,CAF2B;AAGhCG,EAAAA,MAAM,EAAET,GAAG,CAACK,MAAJ,GACPC,QADO,CACE,mBADF,EAEPI,IAFO,CAEF,aAFE,EAEcC,KAAD,IAAW;AAC9B,QAAI,CAACA,KAAL,EAAY,OAAO,KAAP;AAEZ,UAAMC,KAAK,GAAG,eAAeF,IAAf,CAAoBC,KAApB,aAAoBA,KAApB,cAAoBA,KAApB,GAA6B,EAA7B,CAAd;AAEA,QAAI,CAACC,KAAL,EAAY,OAAO,KAAP;AAEZ,UAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBH,KAAK,CAACI,KAAN,CAAY,GAAZ,CAAtB;AAEA,QAAIF,KAAK,GAAG,IAAR,IAAgBA,KAAK,GAAG,IAA5B,EAAkC,OAAO,KAAP;AAElC,QAAIC,IAAI,GAAG,IAAIE,IAAJ,GAAWC,WAAX,GAAyBC,QAAzB,EAAX,EAAgD,OAAO,KAAP;AAEhD,WAAO,IAAP;AACD,GAhBO,CAHwB;AAoBhCC,EAAAA,MAAM,EAAEnB,GAAG,CAACK,MAAJ,GAAaK,IAAb,CACN,aADM,EAEN,2BAFM,EAGLC,KAAD,IAAWV,KAAK,CAACkB,MAAN,CAAaR,KAAb,EAAoBS,OAHzB;AApBwB,CAAnB,CAAf","sourcesContent":["import * as Yup from 'yup'\nimport valid from 'card-validator'\n\nexport default Yup.object().shape({\n  name: Yup.string().required('Campo obrigatório'),\n  cvv: Yup.string().max(3).required('Campo obrigatório'),\n  expiry: Yup.string()\n  .required('Campo obrigatório')\n  .test('Expiry date', (value) => {\n    if (!value) return false\n\n    const match = /\\d{2}\\/\\d{4}/.test(value ?? '')\n\n    if (!match) return false\n\n    const [month, year] = value.split('/')\n\n    if (month < '01' || month > '12') return false\n\n    if (year < new Date().getFullYear().toString()) return false\n\n    return true\n  }),\n  number: Yup.string().test(\n    'test-number',\n    'Número do cartão invalido',\n    (value) => valid.number(value).isValid\n  )\n})\n"]},"metadata":{},"sourceType":"module"}